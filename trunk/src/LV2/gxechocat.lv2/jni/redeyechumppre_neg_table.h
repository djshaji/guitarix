#ifndef _REDEYE_CHUMPPRE_NEG_H_
#define _REDEYE_CHUMPPRE_NEG_H_

// redeyechumppre_neg_table generated by DK/circ_table_gen.py -- do not modify manually

 // variables used
 // --sig_max  -1.500000
 // --table_div  32.006667
 // --table_op  3.000000

struct tableredeyechumppre_neg { // 1-dimensional function table
    float low;
    float high;
    float istep;
    int size;
    float data[];
};

template <int tab_size>
struct tableredeyechumppre_neg_imp {
    float low;
    float high;
    float istep;
    int size;
    float data[tab_size];
    operator tableredeyechumppre_neg&() const { return *(tableredeyechumppre_neg*)this; }
};

 static tableredeyechumppre_neg_imp<200> redeyechumppre_neg_table __rt_data = {
	0,0.610985,398,200, {
	0.000000000000,0.001886690064,0.003809887092,0.005768824333,0.007762755758,
	0.009790955256,0.011852715864,0.013947349028,0.016074183896,0.018232566638,
	0.020421859796,0.022641441661,0.024890705673,0.027169059850,0.029475926238,
	0.031810740383,0.034172950827,0.036562018623,0.038977416871,0.041418630271,
	0.043885154699,0.046376496794,0.048892173569,0.051431712031,0.053994648819,
	0.056580529863,0.059188910045,0.061819352884,0.064471430229,0.067144721966,
	0.069838815735,0.072553306662,0.075287797099,0.078041896375,0.080815220555,
	0.083607392217,0.086418040226,0.089246799527,0.092093310938,0.094957220963,
	0.097838181596,0.100735850151,0.103649889083,0.106579965826,0.109525752633,
	0.112486926425,0.115463168645,0.118454165114,0.121459605900,0.124479185186,
	0.127512601146,0.130559555826,0.133619755026,0.136692908194,0.139778728314,
	0.142876931811,0.145987238444,0.149109371220,0.152243056299,0.155388022903,
	0.158544003242,0.161710732423,0.164887948379,0.168075391789,0.171272806012,
	0.174479937012,0.177696533297,0.180922345849,0.184157128068,0.187400635707,
	0.190652626820,0.193912861705,0.197181102848,0.200457114876,0.203740664509,
	0.207031520507,0.210329453629,0.213634236586,0.216945644002,0.220263452372,
	0.223587440021,0.226917387067,0.230253075386,0.233594288577,0.236940811923,
	0.240292432365,0.243648938468,0.247010120390,0.250375769852,0.253745680111,
	0.257119645936,0.260497463574,0.263878930732,0.267263846551,0.270652011578,
	0.274043227752,0.277437298373,0.280834028087,0.284233222865,0.287634689981,
	0.291038237997,0.294443676740,0.297850817291,0.301259471962,0.304669454286,
	0.308080578995,0.311492662011,0.314905520429,0.318318972503,0.321732837633,
	0.325146936355,0.328561090325,0.331975122310,0.335388856177,0.338802116880,
	0.342214730452,0.345626523996,0.349037325674,0.352446964699,0.355855271325,
	0.359262076843,0.362667213571,0.366070514844,0.369471815015,0.372870949440,
	0.376267754478,0.379662067485,0.383053726804,0.386442571766,0.389828442683,
	0.393211180843,0.396590628508,0.399966628910,0.403339026248,0.406707665685,
	0.410072393345,0.413433056312,0.416789502627,0.420141581290,0.423489142254,
	0.426832036427,0.430170115671,0.433503232803,0.436831241590,0.440153996759,
	0.443471353987,0.446783169909,0.450089302119,0.453389609165,0.456683950561,
	0.459972186780,0.463254179262,0.466529790414,0.469798883615,0.473061323216,
	0.476316974547,0.479565703920,0.482807378630,0.486041866964,0.489269038201,
	0.492488762620,0.495700911504,0.498905357145,0.502101972850,0.505290632945,
	0.508471212785,0.511643588756,0.514807638282,0.517963239836,0.521110272940,
	0.524248618179,0.527378157202,0.530498772736,0.533610348587,0.536712769653,
	0.539805921930,0.542889692520,0.545963969640,0.549028642631,0.552083601966,
	0.555128739258,0.558163947273,0.561189119934,0.564204152334,0.567208940744,
	0.570203382623,0.573187376627,0.576160822621,0.579123621685,0.582075676127,
	0.585016889494,0.587947166578,0.590866413429,0.593774537367,0.596671446987,
	0.599557052173,0.602431264109,0.605293995287,0.608145159518,0.610984671941
	}
};

double always_inline redeyechumppre_negclip(double x) {
    double f = fabs(x);
    f = f * redeyechumppre_neg_table.istep;
    int i = static_cast<int>(f);
    if (i < 0) {
        f = redeyechumppre_neg_table.data[0];
    } else if (i >= redeyechumppre_neg_table.size-1) {
        f = redeyechumppre_neg_table.data[redeyechumppre_neg_table.size-1];
    } else {
    f -= i;
    f = redeyechumppre_neg_table.data[i]*(1-f) + redeyechumppre_neg_table.data[i+1]*f;
    }
    return copysign(f, x);
}

#endif // _REDEYE_CHUMPPRE_NEG_H_
