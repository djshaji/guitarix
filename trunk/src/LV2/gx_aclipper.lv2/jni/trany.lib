
import("stdfaust.lib");

// simple triode circuit emulation

Ftrany = ffunction(float Ftrany(int,float), "trany.h", "");
Rtrany = ffunction(float Rtrany(int,float), "trany.h", "");

TB_KT88_68k      = fconstant(int TRANY_TABLE_KT88_68k,   "trany.h");
TB_KT88_250k     = fconstant(int TRANY_TABLE_KT88_250k,  "trany.h");
TB_7199P_68k      = fconstant(int TRANY_TABLE_7199P_68k,   "trany.h");
TB_7199P_250k     = fconstant(int TRANY_TABLE_7199P_250k,  "trany.h");
TB_SVEL34_68k      = fconstant(int TRANY_TABLE_SVEL34_68k,   "trany.h");
TB_SVEL34_250k     = fconstant(int TRANY_TABLE_SVEL34_250k,  "trany.h");

tranystageF(tb,vplus,divider,fck,Rk,Vk0) = anti_aliase : trany : fi.dcblockerat(1.0) with {
    anti_aliase = fi.lowpass(3,ma.SR/2.1);
    Rp = 100.0e3;
    VkC = Vk0 * (Rp + Rtrany(tb)) / Rk;
    Vp = -(Vk0) : Ftrany(tb);
    tranyVp = Vp <: +(VkC - vplus);
    trany(x) = x : (+ : (tranyVp)) ~ (x*Rk/(Rp + Rtrany(tb))) : /(divider);
};

tranystage(tb,fck,Rk,Vk0)  = tranystageF(tb,250.0,40.0,fck,Rk,Vk0);
