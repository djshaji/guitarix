
// alembic_brite_table generated by DK/circ_table_gen.py -- do not modify manually

 // variables used
 // --sig_max  0.500000
 // --table_div  2.624830
 // --table_op  0.250000

struct tablealembic_brite { // 1-dimensional function table
    float low;
    float high;
    float istep;
    int size;
    float data[];
};

template <int tab_size>
struct tablealembic_brite_imp {
    float low;
    float high;
    float istep;
    int size;
    float data[tab_size];
    operator tablealembic_brite&() const { return *(tablealembic_brite*)this; }
};

 static tablealembic_brite_imp<200> alembic_brite_table __rt_data = {
	0,-0.833309,99.5,200, {
	0.000000000000,-0.016281378935,-0.028448874763,-0.037669841617,-0.044778139761,
	-0.050370154903,-0.054873062693,-0.058593376510,-0.061751486560,-0.064506243972,
	-0.066972468955,-0.069233428062,-0.071349733339,-0.073365695623,-0.075313865558,
	-0.077218283761,-0.079096810919,-0.080962801532,-0.082826308941,-0.084694955265,
	-0.086574561408,-0.088469604978,-0.090383554547,-0.092319114818,-0.094278407432,
	-0.096263105135,-0.098274532001,-0.100313738868,-0.102381560552,-0.104478659623,
	-0.106605560181,-0.108762674158,-0.110950321977,-0.113168748931,-0.115418138275,
	-0.117698621773,-0.120010288275,-0.122353190722,-0.124727351916,-0.127132769302,
	-0.129569418941,-0.132037258837,-0.134536231722,-0.137066267413,-0.139627284793,
	-0.142219193488,-0.144841895300,-0.147495285411,-0.150179253422,-0.152893684225,
	-0.155638458758,-0.158413454644,-0.161218546736,-0.164053607588,-0.166918507854,
	-0.169813116627,-0.172737301738,-0.175690930001,-0.178673867431,-0.181685979425,
	-0.184727130923,-0.187797186539,-0.190896010678,-0.194023467633,-0.197179421672,
	-0.200363737108,-0.203576278359,-0.206816910006,-0.210085496833,-0.213381903865,
	-0.216705996407,-0.220057640062,-0.223436700766,-0.226843044797,-0.230276538799,
	-0.233737049797,-0.237224445203,-0.240738592832,-0.244279360909,-0.247846618073,
	-0.251440233388,-0.255060076346,-0.258706016868,-0.262377925312,-0.266075672472,
	-0.269799129582,-0.273548168316,-0.277322660790,-0.281122479563,-0.284947497637,
	-0.288797588459,-0.292672625915,-0.296572484338,-0.300497038503,-0.304446163624,
	-0.308419735361,-0.312417629812,-0.316439723514,-0.320485893446,-0.324556017023,
	-0.328649972096,-0.332767636955,-0.336908890321,-0.341073611351,-0.345261679634,
	-0.349472975191,-0.353707378470,-0.357964770352,-0.362245032143,-0.366548045574,
	-0.370873692805,-0.375221856416,-0.379592419411,-0.383985265215,-0.388400277672,
	-0.392837341047,-0.397296340020,-0.401777159686,-0.406279685559,-0.410803803561,
	-0.415349400029,-0.419916361711,-0.424504575764,-0.429113929751,-0.433744311646,
	-0.438395609826,-0.443067713071,-0.447760510566,-0.452473891899,-0.457207747054,
	-0.461961966418,-0.466736440774,-0.471531061303,-0.476345719579,-0.481180307572,
	-0.486034717644,-0.490908842548,-0.495802575428,-0.500715809816,-0.505648439633,
	-0.510600359185,-0.515571463164,-0.520561646645,-0.525570805086,-0.530598834328,
	-0.535645630589,-0.540711090469,-0.545795110944,-0.550897589365,-0.556018423462,
	-0.561157511336,-0.566314751462,-0.571490042685,-0.576683284221,-0.581894375657,
	-0.587123216946,-0.592369708407,-0.597633750725,-0.602915244951,-0.608214092496,
	-0.613530195135,-0.618863455003,-0.624213774594,-0.629581056761,-0.634965204714,
	-0.640366122017,-0.645783712592,-0.651217880711,-0.656668531001,-0.662135568439,
	-0.667618898352,-0.673118426415,-0.678634058652,-0.684165701434,-0.689713261474,
	-0.695276645834,-0.700855761915,-0.706450517461,-0.712060820557,-0.717686579629,
	-0.723327703439,-0.728984101087,-0.734655682009,-0.740342355978,-0.746044033098,
	-0.751760623807,-0.757492038875,-0.763238189403,-0.768998986819,-0.774774342882,
	-0.780564169677,-0.786368379615,-0.792186885432,-0.798019600188,-0.803866437265,
	-0.809727310369,-0.815602133523,-0.821490821073,-0.827393287680,-0.833309448326
	}
};

double always_inline alembic_briteclip(double x) {
    double f = fabs(x);
    f = f * alembic_brite_table.istep;
    int i = static_cast<int>(f);
    if (i < 0) {
        f = alembic_brite_table.data[0];
    } else if (i >= alembic_brite_table.size-1) {
        f = alembic_brite_table.data[alembic_brite_table.size-1];
    } else {
    f -= i;
    f = alembic_brite_table.data[i]*(1-f) + alembic_brite_table.data[i+1]*f;
    }
    return copysign(f, x);
}

